version: "2.2"

services:
  webknossos:
    image: lincbrain/webknossos:ak_dev__107
    ports:
      - "127.0.0.1:9000:9000"
    depends_on:
      postgres:
        condition: service_healthy
      fossildb:
        condition: service_healthy
      redis:
        condition: service_healthy
    command:
      - -Dconfig.file=conf/application.conf
      - -Djava.net.preferIPv4Stack=true
      - -Dtracingstore.fossildb.address=fossildb
      - -Dtracingstore.redis.address=redis
      - -Ddatastore.redis.address=redis
      - -Dslick.db.url=jdbc:postgresql://postgres/webknossos
      - -DwebKnossos.sampleOrganization.enabled=false
      - -Dtracingstore.publicUri=https://${PUBLIC_HOST}
      - -Ddatastore.publicUri=https://${PUBLIC_HOST}
    volumes:
      - ./binaryData:/webknossos/binaryData
    environment:
      - JAVA_OPTS=-Xmx48g -Xms24g
      - PUBLIC_HOST=webknossos.lincbrain.org
      - AWS_ACCESS_KEY=0+asdasd
      - AWS_ACCESS_KEY_ID=asdasd
      - POSTGRES_URL=jdbc:postgresql://postgres/webknossos
      - VIRTUAL_HOST=${PUBLIC_HOST}
      - LETSENCRYPT_HOST=${PUBLIC_HOST}
    user: "root"
    networks:
      - webknossos_default
    restart: always

  # Postgres
  postgres:
    image: postgres:15-bullseye
    environment:
      POSTGRES_DB: webknossos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h 127.0.0.1 -p 5432"]
      interval: 2s
      timeout: 5s
      retries: 30
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - "./persistent/postgres:/var/lib/postgresql/data/"

  psql:
    extends: postgres
    command: psql -h postgres -U postgres webknossos
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGPASSWORD: postgres

  # FossilDB
  fossildb:
    image: scalableminds/fossildb:master__489
    command:
      - fossildb
      - -c
      - skeletons,skeletonUpdates,volumes,volumeData,volumeUpdates,volumeSegmentIndex,editableMappings,editableMappingUpdates,editableMappingsInfo,editableMappingsAgglomerateToGraph,editableMappingsSegmentToAgglomerate
    user: 0:0
    volumes:
      - "./persistent/fossildb/data:/fossildb/data"
      - "./persistent/fossildb/backup:/fossildb/backup"

  # Redis
  redis:
    image: redis:7
    command:
      - redis-server
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - "exec 3<> /dev/tcp/127.0.0.1/6379 && echo PING >&3 && head -1 <&3 | grep PONG"
      timeout: 1s
      interval: 5s
      retries: 10

  nginx-proxy:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "8080:8080"
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/letsencrypt
      - /home/ec2-user/opt/webknossos/binaryData:/home/ec2-user/opt/webknossos/binaryData:ro
    depends_on:
      - webknossos

  fossil-db-backup:
    image: scalableminds/fossildb-client:master
    depends_on:
      fossildb:
        condition: service_healthy
    command: ["webknossos-fossildb-1", "backup"]
    networks:
      - webknossos_default

  fossil-db-restore:
    image: scalableminds/fossildb-client:master
    depends_on:
      fossildb:
        condition: service_healthy
    command: ["webknossos-fossildb-1", "restore"]
    networks:
      - webknossos_default

  postgres-backup:
    image: postgres
    command: ["/bin/bash", "-c", "PGPASSWORD=postgres pg_dump -Fc -h postgres -U postgres webknossos | gzip > /backups/backup_$(date +%Y-%m-%d_%H-%M).sql.gz"]
    volumes:
      - ./backups:/backups
    depends_on:
      - postgres

# Explicitly declare networks for fossil-db-backup connectivity
networks:
  webknossos_default:
    external: true


aws efs create-mount-target --file-system-id fs-0e6268b0d22315c10 --subnet-id subnet-0ee67c445bba4b41f --security-groups sg-049da872ed5d3039f

aws efs create-mount-target --file-system-id fs-0e6268b0d22315c10 --subnet-id subnet-0f8c1603dae3d3350 --security-groups sg-049da872ed5d3039f

aws efs create-mount-target --file-system-id fs-0e6268b0d22315c10 --subnet-id subnet-053252c4146eac9fa --security-groups sg-049da872ed5d3039f
