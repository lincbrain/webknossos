// $COVERAGE-OFF$
package webknossos

/** This object was generated by sbt-buildinfo. */
case object BuildInfo {
  /** The value is "webknossos". */
  val name: String = "webknossos"
  /** The value is "2.13.11". */
  val scalaVersion: String = "2.13.11"
  /** The value is "1.9.6". */
  val sbtVersion: String = "1.9.6"
  /** The value is "88baad3c53cb4b27434a8564b9fa3e438a060ea6". */
  val commitHash: String = "88baad3c53cb4b27434a8564b9fa3e438a060ea6"
  /** The value is "Tue Jun 4 15:16:49 2024 -0400". */
  val commitDate: String = "Tue Jun 4 15:16:49 2024 -0400"
  /** The value is "". */
  val ciBuild: String = ""
  /** The value is "". */
  val ciTag: String = ""
  /** The value is "dev". */
  val version: String = "dev"
  /** The value is "2.0". */
  val datastoreApiVersion: String = "2.0"
  override val toString: String = {
    "name: %s, scalaVersion: %s, sbtVersion: %s, commitHash: %s, commitDate: %s, ciBuild: %s, ciTag: %s, version: %s, datastoreApiVersion: %s".format(
      name, scalaVersion, sbtVersion, commitHash, commitDate, ciBuild, ciTag, version, datastoreApiVersion
    )
  }
  val toMap: Map[String, scala.Any] = Map[String, scala.Any](
    "name" -> name,
    "scalaVersion" -> scalaVersion,
    "sbtVersion" -> sbtVersion,
    "commitHash" -> commitHash,
    "commitDate" -> commitDate,
    "ciBuild" -> ciBuild,
    "ciTag" -> ciTag,
    "version" -> version,
    "datastoreApiVersion" -> datastoreApiVersion)

  private def quote(x: scala.Any): String = "\"" + x + "\""
  private def toJsonValue(value: scala.Any): String = {
    value match {
      case elem: scala.collection.Seq[_] => elem.map(toJsonValue).mkString("[", ",", "]")
      case elem: scala.Option[_] => elem.map(toJsonValue).getOrElse("null")
      case elem: scala.collection.Map[_, scala.Any] => elem.map {
        case (k, v) => toJsonValue(k.toString) + ":" + toJsonValue(v)
      }.mkString("{", ", ", "}")
      case d: scala.Double => d.toString
      case f: scala.Float => f.toString
      case l: scala.Long => l.toString
      case i: scala.Int => i.toString
      case s: scala.Short => s.toString
      case bool: scala.Boolean => bool.toString
      case str: String => quote(str)
      case other => quote(other.toString)
    }
  }

  val toJson: String = toJsonValue(toMap)
}
// $COVERAGE-ON$
